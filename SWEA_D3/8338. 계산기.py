"""
다은이는 방탈출 카페에서 마지막 문제를 풀고있다.
마지막 문제는 다음과 같다
N개의 수 a1,a2, ⋯, aN이 있다. 이수들은 차례대로 계산기에 입력 해야만 하는데,
수를 입력하는 중간 중간에 연산자를 반드시 하나 입력을해야만 한다.
연산자에는 더하기 혹은 곱하기만 입력할 수 있다.
정확히 말해서, a1, (+ or x),a2, (+ or x), ⋯, (+ or x), aN를 계산기에 입력하는 것이다.
수식을 계산할 때 연산자의 우선 순위는 고려하지 않고 왼쪽에서 오른쪽으로 차례대로 계산한다.
계산기에 계산된 결과로 나올 수 있는 값 중 최대값을 구하여 방 탈출에 성공하자.

[입력]
첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
각 테스트 케이스의 첫 번째 줄에는 하나의 정수 N( 1 ≤N ≤ 9 )이 주어진다.
두 번째 줄에는 N개의 정수 a1, a2, , ⋯, aN ( 0 ≤ ai ≤ 9 )이 공백 하나로 구분되어 주어진다.

[출력]
각 테스트 케이스마다 ‘#x’(x는 테스트케이스 번호를 의미하며 1부터 시작한다)를 출력하고,
각 테스트 케이스마다 계산기에 계산된 결과로 나올 수 있는 값 중 최대값을 출력한다.
"""

import sys

sys.stdin = open('8338.txt', 'r', encoding = 'UTF-8')


for T in range(int(input())):
    N = int(input())
    numbers = list(map(int, input().split()))
    result = 0
    for n in numbers:
        result_A = result + n
        result_B = result * n
        if result_A > result_B:
            result = result_A
        else:
            result = result_B
    print('#%d %d '%(T+1, result))
# 방법1. 곱했을때, 더했을때를 모두 구한 후 크기를 비교해서 큰값 사용. (쉬움)


# 방법2. 앞수와 뒷수를 보고 더해야 하는지 곱해야 하는지 결정해서 연산.(어려움, 연산을 미리 하지 않아도 되므로 수가 매우 많아졌을때 유리해보임.)
